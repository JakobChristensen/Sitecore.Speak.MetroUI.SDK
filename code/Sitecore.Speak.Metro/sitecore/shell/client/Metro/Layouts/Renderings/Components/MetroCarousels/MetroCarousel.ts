import Speak = require("sitecore/shell/client/Speak/Assets/lib/core/1.2/SitecoreSpeak");

class MetroCarousel extends Speak.ControlBase {
  // #region Public Properties
  // This region was generated by a tool. Changes to this region may cause incorrect behavior and will be lost if the code is regenerated.
  public Auto: boolean;
  public Controls: boolean;
  public Direction: string;
  public Duration: number;
  public Effect: string;
  public Height: string;
  public IsVisible: boolean;
  public Period: number;
  public Position: string;
  public Show: boolean;
  public Stop: boolean;                   
  public Tooltip: string;
  public Type: string;
  public Width: string;
  // #endregion

  private control: any;

  initialized() {
    var markers = {
      type: this.Type.toLowerCase(),
      show: this.Show,
      position: this.Position
    };

    switch(this.Position.toLowerCase()) {
      case "bottomleft":
        markers.position = "bottom-left";
        break;
      case "bottomcenter":
        markers.position = "bottom-center";
        break;
      case "bottomright":
        markers.position = "bottom-right";
        break;
      case "topleft":
        markers.position = "top-left";
        break;
      case "topcenter":
        markers.position = "top-center";
        break;
      case "topright":
        markers.position = "top-right";
        break;
    }

    this.control = (<any>$(this.el)).carousel({
      auto: this.Auto,
      period: !this.Period ? 2000 : this.Period,
      duration: !this.Duration ? 500 : this.Duration,
      effect: this.Effect.toLowerCase(),
      direction: !this.Direction ? "left" : this.Direction,
      stop: this.Stop,
      controls: this.Controls,
      width: !this.Width ? "100%" : this.Width,
      height: !this.Height ? "300px" : this.Height,
      markers: markers
    });
  }
}

Sitecore.component(["metro"], MetroCarousel, "MetroCarousel");
