@using Sitecore.Metro
@using Sitecore.Mvc
@model Sitecore.Shell.Client.Metro.Layouts.Renderings.Components.MetroAccordions.MetroAccordionRenderingModel
@{
  var items = MetroApplication.GetMenuItems(Model, Model.ItemsDataSource, Model.ControlId).ToList();
  if (!items.Any())
  {
    return;
  }

  Model.Class = "accordion";
  Model.Class.AppendIf(Model.ShowMarkers, "with-marker");
  Model.DataBind.IsVisible();
  Model.HasNestedControls = true;
}      
<div @Model.HtmlAttributes data-role="accordion">
  @{
    var contentIndex = 0;
    foreach (var item in items)
    {
      if (string.Compare(item.Name, "PageSettings", StringComparison.InvariantCultureIgnoreCase) == 0)
      {
        continue;
      }

      var isSelected = string.Compare(item.Name, Model.Active, StringComparison.InvariantCultureIgnoreCase) == 0 || string.Compare(item.ID.ToString(), Model.Active, StringComparison.InvariantCultureIgnoreCase) == 0;
      var className = isSelected ? "heading active" : "heading";
      
      HtmlString content;
      if (Model.RenderItemAsContent)
      {
        var itemRenderer = new Sitecore.Web.UI.Controls.Common.ItemRenderers.ItemRenderer
        {
          DataSource = item.ID.ToString(),
          UsePlaceholders = true
        };

        content = new HtmlString(itemRenderer.Render());
      }
      else
      {
        content = this.Html.Sitecore().Placeholder(this.Model.ControlId + ".Tab" + (contentIndex + 1));
      }

      <div class="accordion-frame">
        <a href="#" @Html.Sitecore().ClassAttribute(className)>@Html.Sitecore().Icon(item, Model.IconFieldName)@Html.Sitecore().DisplayName(item, Model.DisplayFieldName, item.DisplayName)</a>
        @content
      </div>

      contentIndex++;
    }
  }
</div>
